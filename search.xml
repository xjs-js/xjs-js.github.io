<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[J2EE复习]]></title>
    <url>%2Fposts%2FJ2EE.html</url>
    <content type="text"><![CDATA[爱就像蓝天白云，晴空万里 复习提纲Chapter 1大不了我全都写:Servlet, ServletConfig, ServletContext, ServletRequest, ServletResponse, GenericServlet, HttpServlet, HttpServletRequest, HttpServletResponse, HttpSession 处理 servlet life cycle events 的接口或类都有哪些?ServletRequest, ServletContext, HttpSession javax.servlet中都有哪些类？接口？Servlet, ServletConfig, ServletContext, GenericServlet, HttpServlet, ServletRequest, ServletResponse, HttpServletRequest, HttpServletResponse Servlet子类都有哪些？Servlet是做什么用的？运行在服务器端还是客户端？GenericServlet, HttpServet. Servlet is a server-side program written in java that dynamically extends the functionality of an application server. Servlet通过哪个类可以取得初始化参数？ServletContext. getInitParameter() HttpServlet类中都有些什么方法, 有何不同?init(), service(), destroy(), doGet(), doPost(), doPut(), doHead()doGet method handles the request using HTTP GET method and is commonly used to retrieve static resources.doPost method handles the request using HTTP POST. When you enter registration data in a HTML form, the data can be sent using the HTTP POST method. The data is sent as part of the request body.doHead method handles the request using HTTP HEAD method. It is similar to the doGet method, sends the request to the server. But it only returns the header of the response.doPut method handles the request using HTTP PUT method. It allows the client to store information on the server. ServletContext是做什么用的？都包含哪些方法？怎么取里面的信息？a. ServletContext provides information to the servlets regarding the environment in which they are running. We can use ServletContext to find the path information of other files of the web application, access to other servlets of the web application and log the messages to the application server log file.b. setAttribute(), getAttribute(), getAttributeNames(), getInitParameter(), getInitParameterNames(). 捕捉 Servlet 生命周期的各种事件 都需要用到哪些监听器？init() 在生命周期中运行几次？servlet request listener, servlet context listener, HTTP session listener. init() runs only once in the life cycle. http是什么？有什么特点？能否存储状态？a. HTTP is short for HyperText Transfer Protocal. It is an application-level protocal. It is used to deliver data on the world wide web.b. simple but powerful, connectionless, stateless, media independentc. No HTTP POST、HTTP GET方法有什么区别?GET: Data is passed as query string appended to the URL.POST: Data is passed as part of the request body. 干什么用的? 填什么? 意思是什么?specify the time after which the servlet will expire.Integer, minutes. Chapter 2 Manage Sessions and Handle Errors &amp; Work with Filters, Request Dispatcher and Servlet Threads J2EE 有几种 线程模式？各是什么？SingleThreadModel是什么有何用?multi-threading model(default), single-threading modelSingleThreadModel is a interface that helps the web container creates a pool of servlet instance and assigns one instance per request. Implementing this interface ensures that only a single thread will excute inside the service() method. RequestDispatcher做什么用的？RequestDispatcher allows inter-servlet communication. You can use it to forwoad the request to another resource that can be a static HTML page or a servlet. You can also use it to include the contents of another resource in your servlet. Hidden Form Field是什么？如何达成功能？By using Hidden Form Field, we can store information about the user activities across web pages.&lt;input type=&quot;hidden&quot; ... &gt; J2EE的会话管理技术有哪些？谁是默认的会话管理方式? Session对象能否在几个Web应用程序间共享？Hidden form fields, URL Rewriting, Cookies, Servlet session API Chapter 3 JSP &amp; JavaBeans and Custom Tags JSP是什么，怎么运行的? 和Servlet有何关系? 有哪些优缺点？JSP core tag 是什么意思? (简答题)JavaServer Pages(JSP) is a technology that helps us creat dynamically generated web pages based on HTML, XML or other document types. Similar to Active Server Pages(ASP) of Microsoft.To deploy and run JavaServerPages, a compatible web server with a servlet container such as Apache Tomcat, is required. When the client browser requests for a particular JSP page, the server, in turn, sends the request to a JSP engine. JSP engine is a part of the web container that compiles a JSP page to a servlet.Architecturally, JSP may be viewed as a high-level abstraction of Java Servlets. JSP pages are translated into servlets at runtime. Advantages: JSP allows java to be embedded directly into an HTML page by using special tags. The HTML content and java content can also be placed in seperate files. Any changes made to the html content is automaticallu compiled and loaded onto the server.A JSP page, by virtue of separate placement of the static and dynamic content, facilitates both web developer and web designer to work indepently. Disadvantages:complex, consuming memory JSP语法 1234&lt;% Java code %&gt;&lt;%= expression %&gt;&lt;%! declarations %&gt;&lt;%-- comments --%&gt; JSP consists of four components. What are they? 12345678910111213JSP directives - [page, taglib, include]page: &lt;%@ page language=&quot;java&quot; %&gt;taglib: include: &lt;%@ include file=&quot;xxx.html&quot; %&gt;JSP scripting - embed Java code directly into an HTML pageJSP implict objects-[request, response, config, pageContext, out, session, page, application, exception]JSP actions &lt;jsp:useBeans&gt;&lt;jsp:include&gt; JSP有哪些隐含可用的对象?application, exception, request, response, out, config, pageContext, page, session JSP Action是什么？做什么用的？JSP Action is a component of a JSP page. JSP Actions are used to perform tasks such as inserting files, reusing beans, forward a user to another page and instantiating objects. We can use JSP Action is such a way: &lt;jsp:attribute&gt; Chapter 4: Custom Tags &amp; Secure web applications J2EE采用的安全机制有哪4个? 之间的区别是什么？Authentication: the process of identifying a user.Authorization: specifies the rights assigned to an authenticated user to access resources of a web application.Data Integrity: ensures that data is not modified while being transferred between the server and the client.Auditing: maintain a record of the rights assigned to different types of web users. Chapter 5: Introducing Design Patterns and JNDI API JNDI命名、目录服务中事件相关的类在哪一个package中？javax.naming JNDI是什么? DataSource起什么作用, 与JNDI有什么关系？JDBC是什么？JNDI与JDBC有什么关系？Java Naming and Directory Interface(JNDI) is an API that provides naming and directory services to Java applications. JNDI also provides information about the applications, naming service, networks, and end-users.DataSource is a resource that contains the information needed to connect to an underlying database. We can use JNDI to bind the DataSource. J2EE 的设计模式有哪些？A: Modle View Control(MVC), Bussiness Delegate, Data Access Object 什么是MVC? Web开发中的Boundary, Service, Entity 组件各指什么？什么是DAO？作用是什么？MVC is a design pattern that seperates the bussiness logic code, data access code and data presentation code.Boundary: views and controllerEntity: real world business objectsService components provide functional service to the boundary components for manipulating entities.DAO is a design pattern that seperates object persistence and data access logic from the bussiness logic or persistence mechanism API. This design pattern enables you to change the data access code at any point in time without modifying the application code. J2EE编程中的request和response是干什么用的？从 http request stream中能得到哪些信息？http 如何从request中存取信息？存在其中的信息与其他类型如ServletContex中的信息的 scope 有何区别？Request object is used to represent the request information being sent by an HTTP client,support for retrieving request parameters and accessing HTTP request header information.Response object provides methods to handle response,status codes, and response headers of the servlets that communicate using HTTP.HTTP request parameter, HTTP request header information J2EE编程里都有哪些scope可以用来存储信息？page, request, session, application 编程能力 在Servlet里如何得到HTML表单里的参数？如何通过request来存取及传递信息; error page如何使用？ 1234567891011121314151617public class myServlet implements HttpServlet &#123; ServletContex ctx; public void init(ServletConfig config) &#123; ctx = config.getServletContext(); &#125; public void doPost(HttpServletRequest request, HttpServletResponse response) &#123; try &#123; string name = request.getParameter("name"); int age = Integer.parseInt(request.getParameter("age")); &#125; catch (Exception ce) &#123; request.setAttribute("Exception", ce); RequestDispatcher ds = ctx.getRequestDispatcher("/errorpage"); ds.forword(request, response); &#125; &#125;&#125; 如何利用 HttpSessionListener 捕捉一个会话的开始?如何得到当前的系统时间? 如何记录日志？ 1234567891011public class mySessionListener implements ServletContextListener, HttpSessionListener&#123; ServletContext ctx; public contextInitialized(ServletContextEvent sce) &#123; ctx = sce.getServletContext(); &#125; public sessionInitialized(HttpSessionEvent hse) &#123; ctx.log("session started at " + new Data()); &#125;&#125;]]></content>
  </entry>
  <entry>
    <title><![CDATA[weibo脚本]]></title>
    <url>%2Fposts%2Fweibo.html</url>
    <content type="text"><![CDATA[当浮一大白 过程进入她的微博，点击“她的相册”；这时页面已经加载了一些代码，如果需要全部的照片，需要自己一直往下滑动，直到底部。 按下F12，打开开发者控制台，粘贴Javascript代码；执行。 结果 脚本github🔗]]></content>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[tar惨案]]></title>
    <url>%2Fposts%2Ftar%E6%83%A8%E6%A1%88.html</url>
    <content type="text"><![CDATA[如何将一个tar文档解压到指定的目录how to use tar to extract file into the specific directory无论是百度还是谷歌，我都懒得打，酿成了一场悲剧。 人生不过从头再来 今天周五，应该交lab1-datalab的，所以便开始做了。只做了前三题，第四题要求计算出一个数对应的二进制有多少个1，正在苦苦思考中。 这时问题来了，dlc文件执行不了，Google了也没有结果。我就想把压缩包里的文件再解压一次，说不定原始文件没有问题。结果解压之后覆盖了原文件夹，之前写的代码全没了。 一定要牢记正确的命令: 12tar -xvf datalab-handout.tar -C datalab # 解压缩tar -cvf datalab-handout datalab # 压缩]]></content>
      <tags>
        <tag>unix</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux Boot Camp]]></title>
    <url>%2Fposts%2F15213-Week2-1.html</url>
    <content type="text"><![CDATA[My Heart is in the Work. Github Shortcuts### 初始配置 ### git config --global user.name "---" git config --global user.email "----@----" ### 常用命令 ### git init # 创建初始仓库 git add * # 增加所有文件 git add &lt;file_name&gt; # 增加指定文件 git add "*.txt" # 增加所有txt文件 git commit -m "commit mesage" # commit git log # 显示日志 git log --pretty=oneline git remote add &lt;remote_name&gt; &lt;remote_repo_url&gt; git push -u origin master # -u告诉git记住后面的参数“origin master”,下次直接git push git pull origin master git diff HEAD git reset &lt;target&gt; git checkout &lt;target&gt; # 跳转到target，target可以是branch，也可以是commit的代码 git branch &lt;branch_name&gt; # 创建新的分支 git branch -d &lt;branch_name&gt; # 删除分支 git checkout &lt;branch_name&gt; # 切换到分支 git merge &lt;branch_name&gt; # 在master分支，合并其他分支；先使用git checkout master git rm "*.txt" ### revert ### git revert HEAD git reset --hard HEAD~1 Terminal ShortcutsCtrl + A : 跳到行首Ctrl + E : 跳到行尾Ctrl + U : 清楚当前行Ctrl + C : kill当前进程Ctrl + L : == clear命令 Something Funvimtutor # vim教程 ls | grep foo # 查找当前目录下的文件 Github交互教程Github详细教程]]></content>
      <tags>
        <tag>15213</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[不知道第几届的Wishare]]></title>
    <url>%2Fposts%2FWishare.html</url>
    <content type="text"><![CDATA[A清汤拉面这题简单，找到规律🌝 #include &lt;iostream&gt; using namespace std; int main(void) { int a, b, c; int N; int maxNum; int t = 0; cin &gt;&gt; N; while(N--) { cin &gt;&gt; a &gt;&gt; b &gt;&gt; c; maxNum = a &gt; b ? a : b; maxNum = maxNum &gt; c ? maxNum : c; t = (maxNum-a) + (maxNum-b) + (maxNum-c); if(t % 2 == 0) cout &lt;&lt; t/2 &lt;&lt; endl; else cout &lt;&lt; (t+1)/2+1 &lt;&lt; endl; } return 0; } B味增拉面不会🌚，看样子要图 C货物处理不会🌚，要用到动态规划，忘了 DZ队长请客这题，说来话长了，以开始用的map，超时了；后来从这从前往后，找到错误往前回溯，没超时，但是答案错误。。。 E这是一道水题最长公共子序列，照书上抄了一遍 #include &lt;iostream&gt; #include &lt;string&gt; using namespace std; int main(void) { int m, n; cin &gt;&gt; m &gt;&gt; n; string str1; string str2; cin &gt;&gt; str1; cin &gt;&gt; str2; str1 = "0" + str1; str2 = "0" + str2; int **c = new int*[m+1]; for(int i = 0; i &lt;= m; i++) { c[i] = new int[n]; } for(int i = 0; i &lt;= m; i++) c[i][0] = 0; for(int i = 0; i &lt;= n; i++) c[0][i] = 0; for(int i = 1; i &lt;= m; i++) for (int j = 1; j &lt;= n; j++) { if(str1[i] == str2[j]) c[i][j] = c[i-1][j-1]+1; else if (c[i-1][j]&gt;=c[i][j-1]) c[i][j] = c[i-1][j]; else c[i][j] = c[i][j-1]; } cout &lt;&lt; m+n- 2* c[m][n] &lt;&lt; endl; return 0; } F听说有人请吃饭？组合问题，不会 G听说有人请吃水林间？这题简单，磨一个面会有四个面变小，如果这四个面中对方占三个，那就赢了 #include &lt;iostream&gt; using namespace std; int main(void) { int table[7][4] = { {0, 0, 0, 0}, {2, 3, 4, 5}, {1, 3, 4, 6}, {1, 2, 5, 6}, {1, 2, 5, 6}, {1, 3, 4, 6}, {2, 3, 4, 5} }; int a, b, c; while(cin &gt;&gt; a &gt;&gt; b &gt;&gt; c) { int relt = 0; int count; for(int i = 1; i &lt;= 6; i++) { count = 0; for(int j = 0; j &lt;= 3; j++) { if(a == table[i][j]) ++count; if(b == table[i][j]) ++count; if(c == table[i][j]) ++count; } if (count &gt;= 3) { relt = i; break; } } cout &lt;&lt; relt &lt;&lt; endl; } } H琪露诺的难题关于数论，素勾股数，通过Google知道了，需满足下面条件 a = m^2 - n^2 b = 2mn c = m^2 + n^2 m、n互质，一个为奇数，一个为偶数 n &lt; m &lt; sqrt(s / 2) 超时 IZPP还能再皮下去吗？不会，题都没看 JZPP和GJLLLL字符串组合，可以相互插，但是顺序不能变]]></content>
      <tags>
        <tag>NOJ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fposts%2Fhello-world.html</url>
    <content type="text"><![CDATA[终于建立起了自己的第一个blog，哈哈哈 一切才刚刚开始 罗马不是一天建成的 更改文件夹所属用户我使用的是MacDown软件来编写md文件，但是_posts文件夹下的文件打不开，因为没有权限，用户为root，安装时必须用root用户。改文件夹里的所有文件的用户即可。 sudo -s chown -R js hexo 获取时间戳用在Front-matter的date、updated。 date "+%Y/%m/%d %H:%M:%S" 增加了Google分析Google搜索Google分析，注册一下，填写相关信息，最终获取到UA，在主题文件夹下的“_config.yml”中修改”google_analytics“。next网站上写的很清楚 帮助博客和文档 next网站hexo网站🙏这位博主写的详细教程]]></content>
  </entry>
</search>

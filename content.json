{"pages":[{"title":"About","text":"About me2019.4 ~ Today: 考研难民 About blog2019/4/30~Today：hexo+icarus 2018/5/29~2019/4/30: hexo+NexT","link":"/about/index.html"},{"title":"tags","text":"","link":"/tags/index.html"}],"posts":[{"title":"Linux Boot Camp","text":"My Heart is in the Work. Github Shortcuts12345678910111213141516171819202122232425### 初始配置 ###git config --global user.name \"---\"git config --global user.email \"----@----\"### 常用命令 ###git init # 创建初始仓库git add * # 增加所有文件 git add &lt;file_name&gt; # 增加指定文件 git add \"*.txt\" # 增加所有txt文件git commit -m \"commit mesage\" # commitgit log # 显示日志git log --pretty=onelinegit remote add &lt;remote_name&gt; &lt;remote_repo_url&gt;git push -u origin master # -u告诉git记住后面的参数“origin master”,下次直接git pushgit pull origin mastergit diff HEADgit reset &lt;target&gt;git checkout &lt;target&gt; # 跳转到target，target可以是branch，也可以是commit的代码git branch &lt;branch_name&gt; # 创建新的分支git branch -d &lt;branch_name&gt; # 删除分支git checkout &lt;branch_name&gt; # 切换到分支git merge &lt;branch_name&gt; # 在master分支，合并其他分支；先使用git checkout mastergit rm \"*.txt\"### revert ### git revert HEADgit reset --hard HEAD~1 Terminal ShortcutsCtrl + A : 跳到行首Ctrl + E : 跳到行尾Ctrl + U : 清楚当前行Ctrl + C : kill当前进程Ctrl + L : == clear命令 Something Fun12vimtutor # vim教程ls | grep foo # 查找当前目录下的文件 Github交互教程Github详细教程","link":"/posts/15213-Week2-1.html"},{"title":"图书馆吵架","text":"背景分析图书馆8:00开门，但是这是不准确的，会提前15分钟左右，工作人员需要开灯，需要开空调，也会提前上班。 我理想中的位置，位于5楼的一个座位。这个座位只坐过一次，时间是去年放寒假之前，在这里看了Competitive Programmer’s Handbook. 今天3月14日，已经开学3周。我还需要准备复试，准备考试。今天是星期四，来图书馆四次。周一中午毕设导师要开会，下午来到图书馆，查了一些复试的资料；周二全天都在图书馆，选了另一边一个馆的位置，进门一直往前走的地方，我到的时候已经是8:26分了，当然有插头的地方都有了人，但是我带了插线板，让别人先把插头拔下，然后插上插线板，这样就解决了，这天是愉快的一天；周三，同样的时间，我去了同样的位置，那个地方坐了同样的人，可是她自己带了一个插线板放在了桌子上。心想：好，我明白了，这是摆明了让我滚蛋的意思，我下次再也不来了。 下面请看周四的经历👇 经过今天早晨，终于终于在8点钟之前起来了，经过洗脸刷牙之后，到达图书馆的时候已经是8:06分了，我记得很清楚。我当时心想，如果别人提前十分钟进馆的话，已经比别人落后16分钟了。 我到了我最喜欢的位置，一看上面已经摆放了四本书占了两个位置，而且是我熟悉的两本书，一本是UML，一本是计算机网络，一看我便明白了。我当时什么都没想，把其中一摞移到另一边，坐了下来。 8:30的时候，他们来了。一看我就认出是昨天坐在这儿的人。我认为他就应该坐下来学习就行了，结果非要找我理论，让我和他换位置。我当时觉得这个逻辑很奇怪，总觉得哪里不对，便不让，要求找负责人评评理。 后来我们就下楼，找2楼的阿姨评理；评到最后，阿姨竟然说我摞别认书不对，我非常不开心，眼睛里饱含泪水，让她找领导过来。过了一会儿，","link":"/posts/9-图书馆吵架.html"},{"title":"J2EE复习","text":"爱就像蓝天白云，晴空万里 复习提纲Chapter 1大不了我全都写:Servlet, ServletConfig, ServletContext, ServletRequest, ServletResponse, GenericServlet, HttpServlet, HttpServletRequest, HttpServletResponse, HttpSession 处理 servlet life cycle events 的接口或类都有哪些?ServletRequest, ServletContext, HttpSession javax.servlet中都有哪些类？接口？Servlet, ServletConfig, ServletContext, GenericServlet, HttpServlet, ServletRequest, ServletResponse, HttpServletRequest, HttpServletResponse Servlet子类都有哪些？Servlet是做什么用的？运行在服务器端还是客户端？GenericServlet, HttpServet. Servlet is a server-side program written in java that dynamically extends the functionality of an application server. Servlet通过哪个类可以取得初始化参数？ServletContext. getInitParameter() HttpServlet类中都有些什么方法, 有何不同?init(), service(), destroy(), doGet(), doPost(), doPut(), doHead()doGet method handles the request using HTTP GET method and is commonly used to retrieve static resources.doPost method handles the request using HTTP POST. When you enter registration data in a HTML form, the data can be sent using the HTTP POST method. The data is sent as part of the request body.doHead method handles the request using HTTP HEAD method. It is similar to the doGet method, sends the request to the server. But it only returns the header of the response.doPut method handles the request using HTTP PUT method. It allows the client to store information on the server. ServletContext是做什么用的？都包含哪些方法？怎么取里面的信息？a. ServletContext provides information to the servlets regarding the environment in which they are running. We can use ServletContext to find the path information of other files of the web application, access to other servlets of the web application and log the messages to the application server log file.b. setAttribute(), getAttribute(), getAttributeNames(), getInitParameter(), getInitParameterNames(). 捕捉 Servlet 生命周期的各种事件 都需要用到哪些监听器？init() 在生命周期中运行几次？servlet request listener, servlet context listener, HTTP session listener. init() runs only once in the life cycle. http是什么？有什么特点？能否存储状态？a. HTTP is short for HyperText Transfer Protocal. It is an application-level protocal. It is used to deliver data on the world wide web.b. simple but powerful, connectionless, stateless, media independentc. No HTTP POST、HTTP GET方法有什么区别?GET: Data is passed as query string appended to the URL.POST: Data is passed as part of the request body. 干什么用的? 填什么? 意思是什么?specify the time after which the servlet will expire.Integer, minutes. Chapter 2 Manage Sessions and Handle Errors &amp; Work with Filters, Request Dispatcher and Servlet Threads J2EE 有几种 线程模式？各是什么？SingleThreadModel是什么有何用?multi-threading model(default), single-threading modelSingleThreadModel is a interface that helps the web container creates a pool of servlet instance and assigns one instance per request. Implementing this interface ensures that only a single thread will excute inside the service() method. RequestDispatcher做什么用的？RequestDispatcher allows inter-servlet communication. You can use it to forwoad the request to another resource that can be a static HTML page or a servlet. You can also use it to include the contents of another resource in your servlet. Hidden Form Field是什么？如何达成功能？By using Hidden Form Field, we can store information about the user activities across web pages.&lt;input type=&quot;hidden&quot; ... &gt; J2EE的会话管理技术有哪些？谁是默认的会话管理方式? Session对象能否在几个Web应用程序间共享？Hidden form fields, URL Rewriting, Cookies, Servlet session API Chapter 3 JSP &amp; JavaBeans and Custom Tags JSP是什么，怎么运行的? 和Servlet有何关系? 有哪些优缺点？JSP core tag 是什么意思? (简答题)JavaServer Pages(JSP) is a technology that helps us creat dynamically generated web pages based on HTML, XML or other document types. Similar to Active Server Pages(ASP) of Microsoft.To deploy and run JavaServerPages, a compatible web server with a servlet container such as Apache Tomcat, is required. When the client browser requests for a particular JSP page, the server, in turn, sends the request to a JSP engine. JSP engine is a part of the web container that compiles a JSP page to a servlet.Architecturally, JSP may be viewed as a high-level abstraction of Java Servlets. JSP pages are translated into servlets at runtime. Advantages: JSP allows java to be embedded directly into an HTML page by using special tags. The HTML content and java content can also be placed in seperate files. Any changes made to the html content is automaticallu compiled and loaded onto the server.A JSP page, by virtue of separate placement of the static and dynamic content, facilitates both web developer and web designer to work indepently. Disadvantages:complex, consuming memory JSP语法 1234&lt;% Java code %&gt;&lt;%= expression %&gt;&lt;%! declarations %&gt;&lt;%-- comments --%&gt; JSP consists of four components. What are they? 12345678910111213JSP directives - [page, taglib, include]page: &lt;%@ page language=&quot;java&quot; %&gt;taglib: include: &lt;%@ include file=&quot;xxx.html&quot; %&gt;JSP scripting - embed Java code directly into an HTML pageJSP implict objects-[request, response, config, pageContext, out, session, page, application, exception]JSP actions &lt;jsp:useBeans&gt;&lt;jsp:include&gt; JSP有哪些隐含可用的对象?application, exception, request, response, out, config, pageContext, page, session JSP Action是什么？做什么用的？JSP Action is a component of a JSP page. JSP Actions are used to perform tasks such as inserting files, reusing beans, forward a user to another page and instantiating objects. We can use JSP Action is such a way: &lt;jsp:attribute&gt; Chapter 4: Custom Tags &amp; Secure web applications J2EE采用的安全机制有哪4个? 之间的区别是什么？Authentication: the process of identifying a user.Authorization: specifies the rights assigned to an authenticated user to access resources of a web application.Data Integrity: ensures that data is not modified while being transferred between the server and the client.Auditing: maintain a record of the rights assigned to different types of web users. Chapter 5: Introducing Design Patterns and JNDI API JNDI命名、目录服务中事件相关的类在哪一个package中？javax.naming JNDI是什么? DataSource起什么作用, 与JNDI有什么关系？JDBC是什么？JNDI与JDBC有什么关系？Java Naming and Directory Interface(JNDI) is an API that provides naming and directory services to Java applications. JNDI also provides information about the applications, naming service, networks, and end-users.DataSource is a resource that contains the information needed to connect to an underlying database. We can use JNDI to bind the DataSource. J2EE 的设计模式有哪些？A: Modle View Control(MVC), Bussiness Delegate, Data Access Object 什么是MVC? Web开发中的Boundary, Service, Entity 组件各指什么？什么是DAO？作用是什么？MVC is a design pattern that seperates the bussiness logic code, data access code and data presentation code.Boundary: views and controllerEntity: real world business objectsService components provide functional service to the boundary components for manipulating entities.DAO is a design pattern that seperates object persistence and data access logic from the bussiness logic or persistence mechanism API. This design pattern enables you to change the data access code at any point in time without modifying the application code. J2EE编程中的request和response是干什么用的？从 http request stream中能得到哪些信息？http 如何从request中存取信息？存在其中的信息与其他类型如ServletContex中的信息的 scope 有何区别？Request object is used to represent the request information being sent by an HTTP client,support for retrieving request parameters and accessing HTTP request header information.Response object provides methods to handle response,status codes, and response headers of the servlets that communicate using HTTP.HTTP request parameter, HTTP request header information J2EE编程里都有哪些scope可以用来存储信息？page, request, session, application 编程能力 在Servlet里如何得到HTML表单里的参数？如何通过request来存取及传递信息; error page如何使用？ 1234567891011121314151617public class myServlet implements HttpServlet { ServletContex ctx; public void init(ServletConfig config) { ctx = config.getServletContext(); } public void doPost(HttpServletRequest request, HttpServletResponse response) { try { string name = request.getParameter(\"name\"); int age = Integer.parseInt(request.getParameter(\"age\")); } catch (Exception ce) { request.setAttribute(\"Exception\", ce); RequestDispatcher ds = ctx.getRequestDispatcher(\"/errorpage\"); ds.forword(request, response); } }} 如何利用 HttpSessionListener 捕捉一个会话的开始?如何得到当前的系统时间? 如何记录日志？ 1234567891011public class mySessionListener implements ServletContextListener, HttpSessionListener{ ServletContext ctx; public contextInitialized(ServletContextEvent sce) { ctx = sce.getServletContext(); } public sessionInitialized(HttpSessionEvent hse) { ctx.log(\"session started at \" + new Data()); }}","link":"/posts/J2EE.html"},{"title":"不知道第几届的Wishare","text":"A清汤拉面这题简单，找到规律🌝 123456789101112131415161718192021222324#include &lt;iostream&gt;using namespace std;int main(void){ int a, b, c; int N; int maxNum; int t = 0; cin &gt;&gt; N; while(N--) { cin &gt;&gt; a &gt;&gt; b &gt;&gt; c; maxNum = a &gt; b ? a : b; maxNum = maxNum &gt; c ? maxNum : c; t = (maxNum-a) + (maxNum-b) + (maxNum-c); if(t % 2 == 0) cout &lt;&lt; t/2 &lt;&lt; endl; else cout &lt;&lt; (t+1)/2+1 &lt;&lt; endl; } return 0;} B味增拉面不会🌚，看样子要图 C货物处理不会🌚，要用到动态规划，忘了 DZ队长请客这题，说来话长了，以开始用的map，超时了；后来从这从前往后，找到错误往前回溯，没超时，但是答案错误。。。 E这是一道水题最长公共子序列，照书上抄了一遍 12345678910111213141516171819202122232425262728293031323334353637#include &lt;iostream&gt;#include &lt;string&gt;using namespace std;int main(void){ int m, n; cin &gt;&gt; m &gt;&gt; n; string str1; string str2; cin &gt;&gt; str1; cin &gt;&gt; str2; str1 = \"0\" + str1; str2 = \"0\" + str2; int **c = new int*[m+1]; for(int i = 0; i &lt;= m; i++) { c[i] = new int[n]; } for(int i = 0; i &lt;= m; i++) c[i][0] = 0; for(int i = 0; i &lt;= n; i++) c[0][i] = 0; for(int i = 1; i &lt;= m; i++) for (int j = 1; j &lt;= n; j++) { if(str1[i] == str2[j]) c[i][j] = c[i-1][j-1]+1; else if (c[i-1][j]&gt;=c[i][j-1]) c[i][j] = c[i-1][j]; else c[i][j] = c[i][j-1]; } cout &lt;&lt; m+n- 2* c[m][n] &lt;&lt; endl; return 0;} F听说有人请吃饭？组合问题，不会 G听说有人请吃水林间？这题简单，磨一个面会有四个面变小，如果这四个面中对方占三个，那就赢了 123456789101112131415161718192021222324252627282930313233343536373839#include &lt;iostream&gt;using namespace std;int main(void){ int table[7][4] = { {0, 0, 0, 0}, {2, 3, 4, 5}, {1, 3, 4, 6}, {1, 2, 5, 6}, {1, 2, 5, 6}, {1, 3, 4, 6}, {2, 3, 4, 5} }; int a, b, c; while(cin &gt;&gt; a &gt;&gt; b &gt;&gt; c) { int relt = 0; int count; for(int i = 1; i &lt;= 6; i++) { count = 0; for(int j = 0; j &lt;= 3; j++) { if(a == table[i][j]) ++count; if(b == table[i][j]) ++count; if(c == table[i][j]) ++count; } if (count &gt;= 3) { relt = i; break; } } cout &lt;&lt; relt &lt;&lt; endl; }} H琪露诺的难题关于数论，素勾股数，通过Google知道了，需满足下面条件 a = m^2 - n^2 b = 2mn c = m^2 + n^2 m、n互质，一个为奇数，一个为偶数 n &lt; m &lt; sqrt(s / 2) 超时 IZPP还能再皮下去吗？不会，题都没看 JZPP和GJLLLL字符串组合，可以相互插，但是顺序不能变","link":"/posts/Wishare.html"},{"title":"UML复习","text":"My heart is in the work. Chapter 1: Introducing Object-Oriented Analysis and DesignSoftware Development Life Cycle(SDLC) * feasibility analysis -&gt; feasibility report * requirements analysis and specification -&gt; software requirement specification * design (translation SRS document into logical structure) * coding (executable programming code) * testing * maintenance Software Development Approaches * waterfall approach * linear sequential flow * 需求明确、稳定、不变；小型系统 * conception -&gt; Initiation -&gt; Analysis -&gt; Design -&gt; Construction -&gt; Integration and Testing -&gt; Implementation and Maintenance * prototyping approach * 原型开发和螺旋方法不同的地方在于：原型是不完整的系统，螺旋方法每个迭代周期是完整的系统 * two types: throwaway prototypes and evolutionary prototypes * spiral approach * includes the iterative nature of prototyping approach and linear nature of waterfall approach * 大型软件开发，如iOS 9, iOS 10, iOS 11, iOS 12 * win-win spiral approach * development teams and customer hold discussion * 适用于time-bound * incremental approach * requirements are broken down into various functional units * each functional unit has Design, Implementation and analysis. Object-Oriented Concepts * classes and objects * an object is an instance of a class * inheritance * abstraction * focuses on essential, inherent aspects of an entity ignoring its implementing details * encapsulation * prevent access to non-essential details * polymorphism OOAD is analysis of requirements and design of software system in terms of the objects, classes, encapsulation, inheritance, polymorphism, abstraction, and dynamic binding. Chapter 2: Introducing UMLUnified Modeling Language(UML) is a standard language for creating blueprints that depict the structure and design of the software system. UML Diagrams * requirements modeling * use cases diagrams * static modeling * class diagrams * objects diagrams * composite structure diagrams * dynamic modeling * communication diagrams * sequence diagrams * timing diagrams * activity diagrams * state machine diagrams * interaction overview diagrams * architecture modeling * package diagrams * ~component diagrams~ * deployment diagrams Chapter 3: Understanding Requirements Modelingrequirements can be classified as functional and non-functional. phases of requirements management * requirements gathering * requirements analysis and negotiation * requirements specification * requirements validation The relationships between use cases and actors: ~association~The relationships between actors and actors: ~generalization~The relationships between use cases and use cases: ~extend~, ~include~ Chapter 4: Migrating from Requirements to DesignSystem boundaries * rectangular box * inside: ~use cases~, outside: ~actors~ Chapter 5: Understanding Static ModelingStatic modeling is used to represent the structure constituents of a software system. The physical structure of a software consists of classes, objects, interfaces and their relationships with each other. Class diagrams: * three compartments: class name, attributes, methods * visibility: &lt;‘+’, public&gt;, &lt;‘-‘, private&gt;, &lt;‘#’, protected&gt;, &lt;‘~’, package&gt; * syntax for attributes: -purchaseDate: Date [1] = “01-01-2000” {readOnly} * syntax for operations: +generatePurchaseList(prodID: Int): String Object diagrams: * two compartments: object name, attributes Relationships in Class and Object Diagrams: * Associations * Aggregation: Computer, CPU, GPU * Composition: People, Hand, Leg * Dependency * 虚箭头 * Generalization * 空心三角箭头 * Relization * 需空心三角箭头 Chapter 6: More about Static ModelingTypes of Classes: * Abstract class * does not have any direct instances * used to define the common features and common behavior of a set of subclasses * Parameterized class(template class) * Factory class * A class that has multiple objects having the same attribute value * self-linked class * more than one role Chapter 7: Understanding Dynamic ModelingDynamic modeling is used to represent the behavior of the structure constituents. Difference between Static and Dynamic Modeling * Static Modeling * represents the static or structural constituents of a software system. * structural modeling * includes class and object diagrams * helps in depicting the relationships and dependencies between the constituents of a system * Dynamic Modeling * represents the behavior of static constituents of a software system. * behavior modeling * includes interaction, activity, and state diagrams * helps in expressing and modeling the behavior of a system over a period of time Chapter 8: More about Dynamic ModelingState Machine Diagrams * constituents: state machines, events and transitions * events: call event, signal event, time event Activity Diagrams * basic elements * action states * activity states * transition * decision Chapter 9: Understanding Software ArchitectureComponent Diagrams * deployment components: DLLs, EXEs * work product components: source code files, data files * execution components: components that are created at runtime. COM+ objects. Chapter 10: Using Frameworks and PatternsA framework is a set of classes that provides the basic functions for a particular domain. A pattern is a set of principles and guidelines that provide the standard solution to a given problem. Patterns make the classes used in developing the software system independent to ensure that the classes remain reusable and manageable. Patterns are generally categorized into two categories: * General Responsibility Assignment Software Patterns(GRASP) * Gang of Four(GoF) patterns GRASP is a set of patterns that provides the principles of assigning responsibilities to objects. * Expert * Creator * Controller GoF patterns suggest that the design should be open to extension and close to modification. GoF should make the design flexible enough to accommodate new changes without modifying the existing code. GoF is also known as design patterns. GoF are categorized into three types: * ~Creational~: provides techniques for creating objects and managing the lifecycle of the objects. * ~Factory~ * factory class controls the lifetime of the objects of the subclasses of an abstract base class. * factory method returns the required object of the subclasses depending on its arguments. * ~Builder~ * ~Singleton~ * ~Structural~: describe how classes and objects can be combined to form lager structures using object composition. * Composite * Proxy * Decorator * Facade * ~Behavioral~: provide guidelines for enabling communication between two objects. * Chain of Responsibility * Command * Observer Chapter 11: UML and Quality Software ProcessesThe goal of quality process is to examine the quality of software models and products developed during the software development process. Three dimensions: * Technology(what) * Methodology(how) * Sociology(who) Tailoring UMLThe process of modifying and extending UML using extensions elements is known as tailoring UML. Three types of extension elements: * Stereotypes: extend the vocabulary of UML * Constraints: extend the semantics of building blocks of UML * Tagged Values: extend the properties of building blocks of UML Chapter 12: Measuring Software ProjectsAdjustment Factor = actual productivity / planned productivity Function points * 用程序的输入输出操作及系统数据文件来衡量应用程序规模的方法 How to calculate Function Points(FP) TUFP(total unadjusted function points) ILF, EIF, EI, EO, EQ VAF(value adjustment factor) VAF = TDI * 0.01 + 0.65 AFP(adjusted function point) AFP = (TUFP + CUP) * VAF","link":"/posts/UML复习.html"},{"title":"Hello World","text":"终于建立起了自己的第一个blog，哈哈哈 一切才刚刚开始 罗马不是一天建成的 更改文件夹所属用户我使用的是MacDown软件来编写md文件，但是_posts文件夹下的文件打不开，因为没有权限，用户为root，安装时必须用root用户。改文件夹里的所有文件的用户即可。 12sudo -s chown -R js hexo 获取时间戳用在Front-matter的date、updated。 1date \"+%Y/%m/%d %H:%M:%S\" 增加了Google分析Google搜索Google分析，注册一下，填写相关信息，最终获取到UA，在主题文件夹下的“_config.yml”中修改”google_analytics“。next网站上写的很清楚 帮助博客和文档 next网站hexo网站🙏这位博主写的详细教程","link":"/posts/hello-world.html"},{"title":"菊苑的猫","text":"Chapter 1今天是考研复试后的第一天，正好是星期五。前一天就计划好要来三牌楼继续听褚老师的课。坐了D1来到司马巷下车，跟着别人走几步就到了学校。一进门是 Chapter X3月31日早上六点钟，猫就来宿舍叫了，应该是饿了，喂了一根火腿肠；喂完后刚上床，她又来了，我表示很诧异，又喂了半根。 下午去苏果超市，买了一些猫粮： 吞拿鱼猫罐 海洋鱼罐头 成猫舔食软 甄选肉块软 成猫金枪鱼 可是到现在，猫也没有来，真的是白买了。我去找了，没找到她的窝在哪儿，倒是遇到了其他3只猫。现在，我认为菊苑应该一共有7只猫： 最亲近的猫 baby cat 1 baby cat 2 baby cat 3 和1号相似，以前打水的时候遇到过，喜欢把爪子放到肚子下 黑色的猫，基本上纯黑色 黑黄白三色 对了，昨天和WP吃烤鱼，带了点鱼回来，没有喂给她吃，放到了宿舍椅子旁。早上喂火腿肠的时候，发现垃圾桶旁有鱼的痕迹，所以这猫还是很聪明的。 不知道今晚还来不来了😂 Last but not least， 猫其实不能喝牛奶，真是罪过了，喂了好几次了。","link":"/posts/cat.html"},{"title":"tar惨案","text":"如何将一个tar文档解压到指定的目录how to use tar to extract file into the specific directory无论是百度还是谷歌，我都懒得打，酿成了一场悲剧。 人生不过从头再来 今天周五，应该交lab1-datalab的，所以便开始做了。只做了前三题，第四题要求计算出一个数对应的二进制有多少个1，正在苦苦思考中。 这时问题来了，dlc文件执行不了，Google了也没有结果。我就想把压缩包里的文件再解压一次，说不定原始文件没有问题。结果解压之后覆盖了原文件夹，之前写的代码全没了。 一定要牢记正确的命令: 12tar -xvf datalab-handout.tar -C datalab # 解压缩tar -cvf datalab-handout datalab # 压缩","link":"/posts/tar惨案.html"},{"title":"Who am I","text":"2019.4 ~ 至今：考研难民","link":"/posts/who.html"},{"title":"weibo脚本","text":"当浮一大白 过程进入她的微博，点击“她的相册”；这时页面已经加载了一些代码，如果需要全部的照片，需要自己一直往下滑动，直到底部。 按下F12，打开开发者控制台，粘贴Javascript代码；执行。 结果 脚本github🔗","link":"/posts/weibo.html"},{"title":"折腾VPS的一天","text":"上个星期刚刚在vultr上买了一台VPS主机，配置如下 1234567Location: New JerseyCPU: 1vCoreRAM: 512MBStorage: 10GB SSDBandwidth: 500GBOS: CentOS 6 x64Price: $3.5/mo 1⃣️、经过对于这台VPS来说，建好了人尽皆知的功能后，我就再也没有动它，直到昨天。 考研失败之后，开始学习C++，光看书是不行的，我很想知道国外学校是如何学习的，他们都做了什么。周五，我就去Google搜索，”C++ course edu”。终于在第一页，就找到了比较合适的课程，Stanford CS106B、CS106X和CS106L。 先学CS 106B，找到了2019 Spring的课程，课程主页上的链接文件都能下载到，无论是Handout，还是Assignment，还是Code都可以下载到，其他学期的页面不行，会跳转到Stanford的服务器，要求登录。这算是第一步。 第二步，就是去YouTube搜索视频，果然搜索到了，是课程教授上传的，很开心。唯一不足的是，视频是电脑的录屏，只能看电脑，看不见人。 第三步，就是下载整个播放列表了。 1youtube-dl --yes-playlist -f bestvideo+bestaudio &lt;url&gt; 但是，下载速度非常的慢，只有100kb~00kb之间，而且经常断连，我以为是我的VPS出了问题。 第四步，所以周六早晨（早晨怎么起的来，是中午）上网搜索解决办法。原来youtube-dl解析后，可以用aria2来下载，但是我按着网上的方法来试用了一下，不行。 1youtube-dl &lt;url&gt; --external-downloader aria2c --external-downloader-args &quot;-x 16&quot; 第五步，我就想到ssh到VPS，在VPS里面执行命令下载。所以就开始折腾了： 安装youtube-dl（先安装pip、再用pip安装youtube-dl） 安装ffmpeg（折腾好久） 安装aria2 安装aria2最麻烦，用yum安装不是最新版的，连接HTTPS有问题，这里就开始死循环了。由于连接不了HTTPS，所以aria2肯定下载不了youtube视频；我怀疑是aria2的版本太低了，我本机上的aria2可以下载HTTPS的资源。所以我就开始找如何编译aria2的源码，果然以失败告终，因为缺少依赖的包。 第六步，放弃使用aria2，直接使用youtube-dl下载吧，没想到速度很快的，5～6分钟左右就下载好了27个视频。 第七步，开始搜索如何从VPS上取回文件到本机。可以使用Caddy+插件，或者使用nginx+autoindex。最终选择了后者，开始安装nginx，这里没有什么问题，然后开始配置nginx，设置autoindex、autoindex_localtime、autoindex_exact_size。设置好了之后重启nginx，这里太坑了，我设置好了之后根本不知道干什么，网上的教程实在是不专业。 这里是重点，当你设置好autoindex之后，访问VPS地址是访问的这个位置/usr/share/nginx/html，所以你在这个文件夹下新建文件夹，比如说download，然后你才可以访问http://ip/download，就可以取回文件了。 1234/etc/ngin x/nginx.conf /etc/init.d/nginx start/etc/init.d/nginx restartps -ef | grep nginx 第八步，使用Motrix下载文件的链接，也是aria2套壳的，可以多线程下载，基本就可以达到本机物理带宽的最大值。 下载完之后，就和roommate去吃饭了，我吃了肯德基，没有嫩牛五方，只吃了老北京鸡肉卷，感觉没吃饱；他本想吃鸭血粉丝，但是人家关门了，哈哈哈。我就说去吃海底捞吧，✊✂️布输给我之后，我们就去吃了，本来说要排1个小时的，但是10分钟就好了，下了几盘五子棋。回来后，喂了苑里的猫，就12点了。 第九步，继续折腾aria2，折腾了好久没有结果，这次真的是放弃了。 第十步，开始搭建aria2+ariang+h5ai，也是白天搜索的时候偶然看见的。觉得很有意思，相当于百度网盘了。这里有人直接打包好了，按着做就行了，🔗。 第十一步，还是下载https不行，因为也是调用aria2，有开始折腾折腾。之后莫名其妙就好了。我的配置文件如下： 12ca-certificate=/etc/pki/tls/certs/ca-bundle.crtcheck-certificate=false 把aria2的进程杀掉，运行12ps -ef|grep aira2c //查看aria2c进程aria2c --conf-path=&quot;/link/to/aria2.conf&quot; -D 第十二步，测试下载bt，一开始不太行，没速度，挂了一会儿之后就有速度了。但是下载一半失败了，因为VPS存储空间没了，到/tmp下删除所有东西，就又回来了。又测试了一下在线播放，没有问题，就是加载有点慢可以接受吧。1df -hl // 查看存储容量 2⃣️、前景VPS的容量太低了，可能要挂载外部的网盘，如Google Drive和OneDrive等，不知道他们的无限容量是怎么搞的。 3⃣️、一些教程12https://502435.com/archives/250/https://darknesschaser.github.io/2018/04/12/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89%E7%BD%91%E7%9B%98-Caddy+AriaNG+Aria2%E9%85%8D%E7%BD%AEHTTPS%E7%A6%BB%E7%BA%BF%E4%B8%8B%E8%BD%BD%E7%BD%91%E7%9B%98/","link":"/posts/折腾VPS的一天.html"},{"title":"设备","text":"个人设备一览，价格为购买时的价格，根据一般的价格规律，商品的价格会随时间而下降。 名 称 设 备 购入时间 价 格 耳机 铁三角 IM70 2019年3月 499 鼠标 罗技 M590 2019年3月 169 鼠标垫 雷蛇重装甲虫移动潜行版小号 2019年3月 79 手机 OnePlus 6（ 6+64G ） 2018年7月 3199 键盘 罗技 K380 2018年5月 179 电脑 MacBook Pro (13-inch, 2017, Four Thunderbolt 3 Ports), i5, 16G+256G 2017年10月 14858 平板 iPad Pro 10.5 (6 + 64G) 2017年7月 5000","link":"/posts/设备.html"}],"tags":[{"name":"15213","slug":"15213","link":"/tags/15213/"},{"name":"LIFE","slug":"LIFE","link":"/tags/LIFE/"},{"name":"NOJ","slug":"NOJ","link":"/tags/NOJ/"},{"name":"unix","slug":"unix","link":"/tags/unix/"},{"name":"JavaScript","slug":"JavaScript","link":"/tags/JavaScript/"},{"name":"VPS","slug":"VPS","link":"/tags/VPS/"}],"categories":[]}